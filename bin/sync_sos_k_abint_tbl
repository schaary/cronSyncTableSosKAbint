#!/usr/bin/env ruby
# encoding: utf-8

require "awesome_print"
require "ruby-plsql"
require 'pry'
require "sequel"
require "thor"

class SyncSosKAbintbl < Thor

  desc 'synchronize','synchronize'
  def synchronize
    fetch_sos_k_abint_tbl
    cleanup
    push_to_idm
  end

private

  def connect_sos
    @sos = Sequel.postgres \
      ENV['PG_ZUV_INSTANCE'],
      user: ENV['PG_ZUV_USER'],
      password: ENV['PG_ZUV_PASSWORD'],
      host: ENV['PG_ZUV_HOST'],
      port: ENV['PG_ZUV_PORT']
  end

  def connect_idm
    plsql.connection ||= OCI8.new \
      ENV['IDM_USERNAME'],
      ENV['IDM_PASSWORD'],
      ENV['IDM_SID']
  end

  def cleanup
    connect_idm
    plsql.sos_cron_pkg.sosKAbintCleanUp
  end

  def push_to_idm
    connect_idm

    entry = {}
    @sos_k_abint_tbl.map do |record|
      entry = {
        abint: record[:abint].to_s.encode('utf-8').strip,
        aikz: record[:aikz].to_s.encode('utf-8').strip,
        ktxt: record[:ktxt].to_s.encode('utf-8').strip,
        dtxt: record[:dtxt].to_s.encode('utf-8').strip,
        ltxt: record[:ltxt].to_s.encode('utf-8').strip,
        astat: record[:astat].to_s.encode('utf-8').strip,
        hrst: record[:hrst].to_s.encode('utf-8').strip,
        part: record[:part].to_s.encode('utf-8').strip,
        anzstg: record[:anzstg].to_i,
        kzfaarray: record[:kzfaarray].to_s.encode('utf-8').strip,
        mag_laa: record[:mag_laa].to_s.encode('utf-8').strip,
        sortkz1: record[:sortkz1].to_s.encode('utf-8').strip,
        anzstgmin: record[:anzstgmin].to_i,
        sprache: record[:sprache].to_s.encode('utf-8').strip,
        refabint: record[:refabint].to_s.encode('utf-8').strip,
        efh: record[:efh].to_s.encode('utf-8').strip,
        astat_bund: record[:astat_bund].to_s.encode('utf-8').strip,
        stufrm: record[:stufrm].to_s.encode('utf-8').strip,
      }

      plsql.sos_k_abint_tbl.insert entry
      plsql.commit
    end
  end

  def fetch_sos_k_abint_tbl
    connect_sos
    @sos_k_abint_tbl = @sos[:k_abint]
  end
end

SyncSosKAbintbl.start
